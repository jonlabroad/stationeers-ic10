alias Larre d0

define ON 1
define OFF 0

define ENABLE 1
define DISABLE 0

define LARRE_IDLE 0
define LARRE_MOVING 1

define HydroHash HASH("StructureHydroponicsTrayData")

define FIRST_STATION 8
define LAST_STATION 0
define STATION_INC -1

define LARRE_HYDRO_SLOT 255

# States
define STATE_IDLE 0
define SEARCH_START 1
define SEARCH_MOVING 2
define SEARCH_CHECK 3
define STATE_HARVEST 4
define STATE_MOVING_HOME 5

alias currState r0
move currState STATE_IDLE
main:
s db Setting currState

alias larreIdle r2
l larreIdle Larre Idle

alias larreSetting r4
l larreSetting Larre Setting

alias currStation r3

beq currState STATE_IDLE idleState
beq currState SEARCH_START searchStart
beq currState SEARCH_MOVING searchMoving
beq currState SEARCH_CHECK searchCheck
beq currState STATE_HARVEST harvest

idleState:
# Check if there is something ready to harvest
# Currently assuming all will seed :)
alias seedStatus r1
lbs seedStatus HydroHash 0 Seeding Maximum
blez seedStatus end

move currStation FIRST_STATION
move currState SEARCH_START
j end

searchStart:
s Larre Setting currStation
move currState SEARCH_MOVING
j end

searchMoving:
# Check if Larre has arrived
bne larreIdle LARRE_IDLE end
move currState SEARCH_CHECK
j end

searchCheck:
# Harvest? Or Move on?
ls seedStatus Larre LARRE_HYDRO_SLOT Seeding
bgt seedStatus 0 searchCheckHarvest
# Go to next station
add currStation STATION_INC currStation
s Larre Setting currStation
move currState SEARCH_MOVING 
j end
searchCheckHarvest:
move currState STATE_HARVEST
j end

harvest:
# Check if we are done harvesting
alias occupied r5
ls occupied Larre LARRE_HYDRO_SLOT Occupied
bne larreIdle LARRE_IDLE end # Skip the rest if busy

# Larre is idle
# Are we done harvesting?
beqz occupied harvestDone
# Still more harvest to go
s Larre Activate ENABLE
sleep 1
j end
harvestDone:
move currState STATE_MOVING_HOME
j end

moveHome:
# TODO
j end

end:
yield
j main
