alias AtmoSensor d0
alias AtmoPump d1
alias CO2Injector d2
alias AirFilter d3
alias AirFilterBypass d4

define ON 1
define OFF 0

define MAX_ATMO_PRESSURE 95
define DESIRED_PRESSURE 80
define MIN_ATMO_PRESSURE 65
define MIN_CO2_RATIO 0.10
define MIN_DESIRABLES_RATIO 0.92
define MAX_DESIRABLES_RATIO 0.97
define WARNING_PRESSURE_THRESHOLD_START 60
define WARNING_PRESSURE_THRESHOLD_END 65
define ALARM_INTERVAL 10

s CO2Injector Setting 1

alias ticksSinceLastAlarm r12
move ticksSinceLastAlarm 0

main:
alias atmoPressure r0
l atmoPressure AtmoSensor Pressure

alias atmoRatioCO2 r1
l atmoRatioCO2 AtmoSensor RatioCarbonDioxide

alias atmoRatioNitrogen r2
l atmoRatioNitrogen AtmoSensor RatioNitrogen

alias desirablesRatio r3
add desirablesRatio atmoRatioCO2 atmoRatioNitrogen
s db Setting desirablesRatio

alias atmoPumpOn r4
l atmoPumpOn AtmoPump On

alias filterOn r5
l filterOn AirFilter On

alias bypassOn r6
l bypassOn AirFilterBypass On

jal controlAtmoPump
jal controlCO2Supply
jal controlFilter
jal setDisplays
jal setAlarms

add ticksSinceLastAlarm ticksSinceLastAlarm 1

end:
yield
j main

controlAtmoPump:
beq atmoPumpOn ON _pumpIsOn
# Pump is OFF
slt r14 atmoPressure MIN_ATMO_PRESSURE
s AtmoPump On r14
j ra
_pumpIsOn:
slt r14 atmoPressure DESIRED_PRESSURE
s AtmoPump On r14
j ra

controlCO2Supply:
slt r10 atmoRatioCO2 MIN_CO2_RATIO
s CO2Injector On r10
j ra

controlFilter:
beq filterOn ON _filterIsOn
# Filter is OFF
slt r14 desirablesRatio MIN_DESIRABLES_RATIO
beq filterOn r14 _checkBypass1 # Don't set if already set (it makes noise)
s AirFilter On r14
_checkBypass1:
seqz r14 r14 # NOT
s AirFilterBypass On r14
j ra
_filterIsOn:
slt r14 desirablesRatio MAX_DESIRABLES_RATIO
beq filterOn r14 _checkBypass2 # Don't set if already set (it makes noise)
s AirFilter On r14
_checkBypass2:
seqz r14 r14 # NOT
s AirFilterBypass On r14
j ra

setDisplays:
sbn HASH("StructureConsoleLED5") HASH("Pressure") Setting atmoPressure
sbn HASH("StructureConsoleLED5") HASH("Ratio") Setting desirablesRatio
j ra

setAlarms:
blt ticksSinceLastAlarm ALARM_INTERVAL ra
sb HASH("StructureKlaxon") On OFF
slt r14 atmoPressure WARNING_PRESSURE_THRESHOLD_START
sb HASH("StructureKlaxon") On r14
move ticksSinceLastAlarm 0
j ra
